import { notFound } from "next/navigation";
import Link from "next/link";
import {
  ArrowLeft,
  Calendar,
  DollarSign,
  Shield,
  AlertTriangle,
  Network,
  RefreshCw,
} from "lucide-react";
import { getExploitById } from "@/data/exploits";
import type { Exploit } from "@/types/exploit";

import { AppSidebar } from "@/components/app-sidebar";
import {
  Breadcrumb,
  BreadcrumbItem,
  BreadcrumbLink,
  BreadcrumbList,
  BreadcrumbPage,
  BreadcrumbSeparator,
} from "@/components/ui/breadcrumb";
import { Separator } from "@/components/ui/separator";
import {
  SidebarInset,
  SidebarProvider,
  SidebarTrigger,
} from "@/components/ui/sidebar";
import { SiteFunctionsHeader } from "@/components/site-functions-header";

interface ExploitDetailPageProps {
  params: Promise<{ id: string }>;
}

// Helper function to get status color
const getStatusColor = (status: string): string => {
  switch (status) {
    case "resolved":
      return "text-green-600 bg-green-50 border-green-200";
    case "partial":
      return "text-yellow-600 bg-yellow-50 border-yellow-200";
    case "ongoing":
      return "text-blue-600 bg-blue-50 border-blue-200";
    case "total-loss":
      return "text-red-600 bg-red-50 border-red-200";
    default:
      return "text-gray-600 bg-gray-50 border-gray-200";
  }
};

// Helper function to get severity color
const getSeverityColor = (severity: string): string => {
  switch (severity) {
    case "critical":
      return "text-red-600 bg-red-50 border-red-200";
    case "high":
      return "text-orange-600 bg-orange-50 border-orange-200";
    case "medium":
      return "text-yellow-600 bg-yellow-50 border-yellow-200";
    case "low":
      return "text-green-600 bg-green-50 border-green-200";
    default:
      return "text-gray-600 bg-gray-50 border-gray-200";
  }
};

export default async function ExploitDetailPage({
  params,
}: ExploitDetailPageProps) {
  const { id } = await params;
  const exploit: Exploit | undefined = getExploitById(id);

  if (!exploit) {
    notFound();
  }

  return (
    <SidebarProvider>
      <AppSidebar />
      <SidebarInset>
        <header className="flex h-16 shrink-0 items-center gap-2 border-b">
          <div className="flex items-center gap-2 px-4">
            <SidebarTrigger className="-ml-1" />
            <Separator orientation="vertical" className="mr-2 h-4" />
            <Breadcrumb>
              <BreadcrumbList>
                <BreadcrumbItem className="hidden md:block">
                  <BreadcrumbLink href="/dashboard">Dashboard</BreadcrumbLink>
                </BreadcrumbItem>
                <BreadcrumbSeparator className="hidden md:block" />
                <BreadcrumbItem>
                  <BreadcrumbLink href="/dashboard/vulnerabilities/exploits">
                    Exploits
                  </BreadcrumbLink>
                </BreadcrumbItem>
                <BreadcrumbSeparator className="hidden md:block" />
                <BreadcrumbItem>
                  <BreadcrumbPage className="max-w-[200px] truncate">
                    {exploit.title}
                  </BreadcrumbPage>
                </BreadcrumbItem>
              </BreadcrumbList>
            </Breadcrumb>
          </div>
          <SiteFunctionsHeader />
        </header>

        <div className="flex flex-1 flex-col gap-6 p-6 max-w-4xl mx-auto">
          <div className="min-h-screen bg-background">
            <div className="max-w-4xl mx-auto">
              {/* Header with back navigation */}
              <div className="mb-6">
                <Link
                  href="/dashboard/vulnerabilities/exploits"
                  className="inline-flex items-center text-xs text-muted-foreground hover:text-foreground mb-4"
                >
                  <ArrowLeft className="h-4 w-4 mr-2" />
                  Back to Exploits
                </Link>

                <div className="flex items-start justify-between">
                  <div className="flex-1">
                    <h1 className="text-sm font-semibold mb-2">
                      {exploit.title}
                    </h1>
                    <p className="text-sm text-muted-foreground mb-4">
                      {exploit.description}
                    </p>

                    <div className="flex items-center gap-4 mb-4">
                      <span
                        className={`inline-flex items-center px-2 py-1 rounded-md text-xs font-medium border ${getSeverityColor(
                          exploit.severity
                        )}`}
                      >
                        <AlertTriangle className="h-3 w-3 mr-1" />
                        {exploit.severity.charAt(0).toUpperCase() +
                          exploit.severity.slice(1)}
                      </span>
                      <span
                        className={`inline-flex items-center px-2 py-1 rounded-md text-xs font-medium border ${getStatusColor(
                          exploit.status
                        )}`}
                      >
                        <RefreshCw className="h-3 w-3 mr-1" />
                        {exploit.status.charAt(0).toUpperCase() +
                          exploit.status.slice(1).replace("-", " ")}
                      </span>
                    </div>
                  </div>

                  <div className="text-right">
                    <div className="text-sm font-semibold text-red-600">
                      {exploit.valueLost}
                    </div>
                    <div className="text-xs text-muted-foreground">
                      Value Lost
                    </div>
                  </div>
                </div>
              </div>

              {/* Main content grid */}
              <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
                {/* Main details */}
                <div className="lg:col-span-2 space-y-6">
                  {/* Basic Information */}
                  <div className="bg-card rounded-lg border p-4">
                    <h2 className="text-sm font-semibold mb-4">
                      Basic Information
                    </h2>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                      <div className="flex items-center">
                        <Calendar className="h-4 w-4 text-muted-foreground mr-2" />
                        <div>
                          <div className="text-xs text-muted-foreground">
                            Date
                          </div>
                          <div className="text-sm">{exploit.date}</div>
                        </div>
                      </div>
                      <div className="flex items-center">
                        <DollarSign className="h-4 w-4 text-muted-foreground mr-2" />
                        <div>
                          <div className="text-xs text-muted-foreground">
                            Category
                          </div>
                          <div className="text-sm">{exploit.category}</div>
                        </div>
                      </div>
                      <div className="flex items-center">
                        <Shield className="h-4 w-4 text-muted-foreground mr-2" />
                        <div>
                          <div className="text-xs text-muted-foreground">
                            Attack Type
                          </div>
                          <div className="text-sm">{exploit.attackType}</div>
                        </div>
                      </div>
                      <div className="flex items-center">
                        <AlertTriangle className="h-4 w-4 text-muted-foreground mr-2" />
                        <div>
                          <div className="text-xs text-muted-foreground">
                            Root Cause
                          </div>
                          <div className="text-sm">{exploit.rootCause}</div>
                        </div>
                      </div>
                    </div>
                  </div>

                  {/* Technical Details */}
                  <div className="bg-card rounded-lg border p-4">
                    <h2 className="text-sm font-semibold mb-4">
                      Technical Details
                    </h2>
                    <div className="space-y-3">
                      {exploit.networks && (
                        <div className="flex items-start">
                          <Network className="h-4 w-4 text-muted-foreground mr-2 mt-0.5" />
                          <div>
                            <div className="text-xs text-muted-foreground">
                              Networks Affected
                            </div>
                            <div className="text-sm">{exploit.networks}</div>
                          </div>
                        </div>
                      )}

                      {exploit.trigger && (
                        <div>
                          <div className="text-xs text-muted-foreground">
                            Trigger
                          </div>
                          <div className="text-sm">{exploit.trigger}</div>
                        </div>
                      )}

                      {exploit.discoveryDelay && (
                        <div>
                          <div className="text-xs text-muted-foreground">
                            Discovery Delay
                          </div>
                          <div className="text-sm">
                            {exploit.discoveryDelay}
                          </div>
                        </div>
                      )}

                      {exploit.legalStatus && (
                        <div>
                          <div className="text-xs text-muted-foreground">
                            Legal Status
                          </div>
                          <div className="text-sm">{exploit.legalStatus}</div>
                        </div>
                      )}
                    </div>
                  </div>

                  {/* Impact & Timeline */}
                  <div className="bg-card rounded-lg border p-4">
                    <h2 className="text-sm font-semibold mb-4">
                      Impact & Timeline
                    </h2>
                    <div className="space-y-3">
                      <div>
                        <div className="text-xs text-muted-foreground">
                          Timeline
                        </div>
                        <div className="text-sm">
                          {exploit.details.timeline}
                        </div>
                      </div>
                      <div>
                        <div className="text-xs text-muted-foreground">
                          Impact
                        </div>
                        <div className="text-sm">{exploit.details.impact}</div>
                      </div>
                      {exploit.details.validators && (
                        <div>
                          <div className="text-xs text-muted-foreground">
                            Validators Compromised
                          </div>
                          <div className="text-sm">
                            {exploit.details.validators}
                          </div>
                        </div>
                      )}
                    </div>
                  </div>
                </div>

                {/* Sidebar */}
                <div className="space-y-6">
                  {/* Recovery Status */}
                  <div className="bg-card rounded-lg border p-4">
                    <h3 className="text-sm font-semibold mb-3">
                      Recovery Status
                    </h3>
                    <div className="space-y-2">
                      <div
                        className={`p-3 rounded-md border ${getStatusColor(
                          exploit.status
                        )}`}
                      >
                        <div className="text-xs font-medium">
                          {exploit.status.charAt(0).toUpperCase() +
                            exploit.status.slice(1).replace("-", " ")}
                        </div>
                      </div>
                      {exploit.recovery && (
                        <div className="text-sm text-muted-foreground">
                          <div className="text-xs text-muted-foreground">
                            Recovery Details
                          </div>
                          <div className="text-sm">{exploit.recovery}</div>
                        </div>
                      )}
                    </div>
                  </div>

                  {/* Key Metrics */}
                  <div className="bg-card rounded-lg border p-4">
                    <h3 className="text-sm font-semibold mb-3">Key Metrics</h3>
                    <div className="space-y-3">
                      <div className="flex justify-between">
                        <span className="text-xs text-muted-foreground">
                          Value Lost
                        </span>
                        <span className="text-sm font-medium text-red-600">
                          {exploit.valueLost}
                        </span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-xs text-muted-foreground">
                          Year
                        </span>
                        <span className="text-sm">{exploit.year}</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-xs text-muted-foreground">
                          Severity
                        </span>
                        <span className="text-sm capitalize">
                          {exploit.severity}
                        </span>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </SidebarInset>
    </SidebarProvider>
  );
}
